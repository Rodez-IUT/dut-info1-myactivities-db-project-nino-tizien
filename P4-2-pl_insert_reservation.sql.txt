 Description de la fonction :  

    - *Nom de la fonction* :  
    "gds.pl_insert_reservation"  
    - *Arguments de la fonction* :  
    "une_date_debut" de type "timestamp without time zone"
    "une_date_fin" de type "timestamp without time zone" 
    "un_nom_de_salle" de type "character varying(250)"
    - *Description* :   
    La fonction tente d'inserer une nouvelle réservation dans la table "reservation" dont la date de début, la date de fin et le nom de la salle réservée sont transmis en paramètres.
    Si la salle demandée n'existe pas dans la base alors un message doit s'afficher dans la console (à l'aide d'une instruction "RAISE NOTICE") pour indiquer que la salle demandée n'existe pas. La fonction retourne alors une ligne constituée de valeurs nulles. 
    Si la salle demandée existe, alors la fonction utilise la séquence "gds.reservation_seq" pour générer la valeur de la clé primaire de la réservation à insérer dans la base. La date de création et la date de modification sont initialisées en utilisant la fonction "now()". 
    La fonction retourne la réservation qui a été insérée.


CREATE OR REPLACE FUNCTION gds.pl_insert_reservation(
  une_date_debut timestamp without time zone,
  une_date_fin timestamp without time zone, 
  un_nom_de_salle character varying(250) 
) RETURNS gds.reservation AS $$
DECLARE
 salle_id gds.salle.id%TYPE;
 reservation gds.reservation%ROWTYPE;
BEGIN
SELECT id INTO salle_id from gds.salle where nom = un_nom_de_salle;
IF FOUND 
THEN
-- insert la reservation
INSERT INTO gds.reservation (id, date_debut, date_fin, date_creation, date_modification,salle_id) 
VALUES (nextval('gds.reservation_seq'),
  une_date_debut, 
  une_date_fin, 
  now(), 
  now(),
  salle_id
  ) 
  returning * INTO reservation;
ELSE
RAISE NOTICE 'La salle demandée n''existe pas';
END IF;
RETURN reservation;
END;
$$ LANGUAGE plpgsql;